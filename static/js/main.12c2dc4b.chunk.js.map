{"version":3,"sources":["TodoTemplate.js","TodoInsert.js","TodoListItem.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoTempBlock","styled","div","TodoTemplate","children","className","FormBlock","TodoInsert","onInsert","inputEl","useRef","useState","value","setValue","onSubmit","e","preventDefault","current","focus","type","placeholder","onChange","target","ref","TodoListItemBlock","TodoListItem","todo","onToggle","onRemove","id","text","checked","onClick","cn","TodoListBlock","TodoList","todos","map","App","setTodos","nextid","useCallback","localStorage","kim","JSON","stringify","concat","filter","useEffect","localNextId","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAGMA,EAAgBC,IAAOC,IAAV,wcA4BJC,EATM,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACnB,OACI,eAACJ,EAAD,WACI,oBAAIK,UAAU,YAAd,yBACA,qBAAKA,UAAU,UAAf,SAA0BD,Q,OCtBhCE,EAAYL,IAAOC,IAAV,2+BA+DAK,EAxBI,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACXC,EAAUC,iBAAO,IADQ,EAELC,mBAAS,IAFJ,mBAExBC,EAFwB,KAEjBC,EAFiB,KAY/B,OACI,cAACP,EAAD,UACI,uBAAMD,UAAU,aAAaS,SARpB,SAACC,GACdA,EAAEC,iBACFR,EAASI,GACTC,EAAS,IACTJ,EAAQQ,QAAQC,SAIZ,UACI,uBAAOC,KAAK,OAAOC,YAAY,gEAAcR,MAAOA,EAAOS,SAZtD,SAACN,GACdF,EAASE,EAAEO,OAAOV,QAWqEW,IAAKd,IACpF,wBAAQU,KAAK,SAAb,SACI,cAAC,IAAD,Y,iBCvDdK,EAAoBvB,IAAOC,IAAV,osBAmDRuB,EAnBM,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAC5BC,EAAoBH,EAApBG,GAAGC,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,QAGhB,OACI,8BACI,eAACP,EAAD,WACG,sBAAKnB,UAAU,OAAO2B,QAAS,kBAAIL,EAASE,IAA5C,UACKE,EAAU,cAAC,IAAD,CAAY1B,UAAU,QAAW,cAAC,IAAD,IAC5C,qBAAKA,UAAW4B,IAAG,OAAQ,CAACF,YAA5B,SAAwCD,OAE5C,qBAAKzB,UAAU,SAAS2B,QAAS,kBAAIJ,EAASC,IAA9C,SACI,cAAC,IAAD,YC7CbK,EAAgBjC,IAAOC,IAAV,4GAkBJiC,EAVE,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOT,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAChC,OACI,cAACM,EAAD,UAEQE,EAAMC,KAAI,SAACX,GAAD,OAAU,cAAC,EAAD,CAA4BA,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,GAAnDF,EAAKG,UCyC7CS,EApDH,WAAO,IAAD,EAEU3B,mBAAS,IAFnB,mBAETyB,EAFS,KAEFG,EAFE,KAOVC,EAAS9B,iBAAO,GAChBiB,EAAWc,uBACf,SAACZ,GACCU,EAASH,EAAMC,KAAI,SAAAX,GAAI,OAAEA,EAAKG,KAAKA,EAAV,2BAAmBH,GAAnB,IAAyBK,SAASL,EAAKK,UAAWL,MAC3EgB,aAAaC,IAAMC,KAAKC,UAAUT,EAAMC,KAAI,SAAAX,GAAI,OAAEA,EAAKG,KAAKA,EAAV,2BAAmBH,GAAnB,IAAyBK,SAASL,EAAKK,UAAWL,QAEtG,CAACU,IAGG5B,EAAWiC,uBACjB,SAAC7B,GACC,IAAMc,EAAO,CAACG,GAAGW,EAAOvB,QAASa,KAAKlB,EAAOmB,SAAQ,GACrDS,EAAOvB,QAAUuB,EAAOvB,QAAU,EAClCsB,EAAUH,EAAMU,OAAOpB,IACvBgB,aAAaC,IAAMC,KAAKC,UAAUT,EAAMU,OAAOpB,IAC/CgB,aAAaF,OAASI,KAAKC,UAAWL,EAAOvB,WAE9C,CAACmB,IAGIR,EAAWa,uBACf,SAACZ,GACCU,EAASH,EAAMW,QAAO,SAAArB,GAAI,OAAIA,EAAKG,KAAOA,MAC1Ca,aAAaC,IAAMC,KAAKC,UAAUT,EAAMW,QAAO,SAAArB,GAAI,OAAIA,EAAKG,KAAOA,QAEpE,CAACO,IAYJ,OAVEY,qBACE,WACA,IAAMtB,EAAOgB,aAAaC,IACpBM,EAAcP,aAAaF,OAC9Bd,IACDa,EAASH,EAAMU,OAAOF,KAAKM,MAAMxB,KACjCc,EAAOvB,QAAU2B,KAAKM,MAAMD,MAE7B,IAGH,eAAC,EAAD,WACI,cAAC,EAAD,CAAYzC,SAAUA,IACtB,cAAC,EAAD,CAAU4B,MAAOA,EAAOT,SAAUA,EAAUC,SAAUA,QCxC/CuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.12c2dc4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoTempBlock = styled.div`\r\n    box-shadow: 0px 20px 35px rgb(0 0 0 / 20%);\r\n    max-width:432px;\r\n    margin:50px auto;\r\n    .app-title { \r\n        background:#ffffff;\r\n        color:#333;\r\n        height:4rem;\r\n        font-size:1.5rem;\r\n        // display:flex;\r\n        // align-items:center;\r\n        // justify-content:center;\r\n        text-align:left;\r\n        padding-left:25px;\r\n        line-height:4rem;\r\n    }\r\n    .content { background:#fff }\r\n`;\r\n\r\nconst TodoTemplate = ({children}) => {\r\n    return (\r\n        <TodoTempBlock>\r\n            <h1 className=\"app-title\">My Projects</h1>\r\n            <div className=\"content\">{children}</div>\r\n        </TodoTempBlock>\r\n    );\r\n};\r\n\r\nexport default TodoTemplate;","import React, {useState, useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport {MdAdd} from 'react-icons/md'\r\n\r\nconst FormBlock = styled.div`\r\n\r\n    .TodoInsert {\r\n        background:#fff;\r\n        display:flex; \r\n        position:relative;\r\n        margin-bottom:30px;\r\n        input { \r\n            margin: 0 20px;\r\n            border-radius:30px;\r\n            background:#f3f3f3; \r\n            outline:none; \r\n            border:none; \r\n            padding:15px 0 10px 20px;\r\n            font-size:15px;\r\n            line-height:1.5;\r\n            color:#444;\r\n            flex:1;\r\n            border-bottom: 1.5px solid #dadada;\r\n           \r\n            &::placeholder { color:#828282 }\r\n         }\r\n       button {\r\n           position:absolute;\r\n           width:40px;height:40px;\r\n           right:25px;top:5px;\r\n            background:#847cc2;;\r\n            border-radius:50%;\r\n            outline:none;\r\n            border:none;\r\n            color:#fff;\r\n            padding: 5px 0 0;\r\n            font-size:1.5rem;\r\n            cursor:pointer;\r\n            &:hover { background:#adb5bd }\r\n       }  \r\n    }\r\n`;\r\n\r\nconst TodoInsert = ({onInsert}) => {\r\n    const inputEl = useRef('')\r\n    const [value, setValue] = useState('')\r\n    const onChange = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        onInsert(value)\r\n        setValue('')\r\n        inputEl.current.focus()\r\n    }\r\n    return (\r\n        <FormBlock>\r\n            <form className=\"TodoInsert\" onSubmit={onSubmit}>\r\n                <input type=\"text\" placeholder=\"프로젝트를 입력하시오\" value={value} onChange={onChange} ref={inputEl} />\r\n                <button type=\"submit\">\r\n                    <MdAdd />\r\n                </button>\r\n            </form>\r\n        </FormBlock>\r\n    );\r\n};\r\n\r\nexport default TodoInsert;","import React, {} from 'react';\r\nimport styled from 'styled-components';\r\nimport cn from 'classnames';\r\nimport {MdRemoveCircleOutline, MdCheckBoxOutlineBlank, MdCheckBox} from 'react-icons/md';\r\n\r\nconst TodoListItemBlock = styled.div`\r\n    padding:1rem;\r\n    display:flex;\r\n    margin: 0 30px;\r\n    padding: 15px 10px 15px 15px;\r\n    align-items:center;\r\n    &+& {border-top:1px solid #dee2e6; }\r\n    &:nth-child(even) { background:#f8f9fa;}\r\n    border-bottom: 1.5px solid #dadada;\r\n    .list {\r\n        flex:1;\r\n        display:flex;\r\n        \r\n        align-items:center;\r\n        .red {\r\n            color:#847cc2;\r\n            font-size:20px;\r\n            border-radius:50%;\r\n        }\r\n        .text {\r\n            margin-left:0.5rem;\r\n        }\r\n        .text.checked {text-decoration:line-through; }\r\n\r\n    }\r\n    .remove {\r\n        color:#ff6b6b;\r\n        cursor:pointer;\r\n        font-size:1.5rem;\r\n    }\r\n`;\r\n\r\nconst TodoListItem = ({todo, onToggle, onRemove}) => {\r\n    const {id,text, checked} = todo\r\n\r\n\r\n    return (\r\n        <div>\r\n            <TodoListItemBlock>\r\n               <div className=\"list\" onClick={()=>onToggle(id)}>\r\n                   {checked ? <MdCheckBox className=\"red\" /> : <MdCheckBoxOutlineBlank />}\r\n                   <div className={cn(\"text\", {checked})}>{text}</div>\r\n               </div>\r\n               <div className=\"remove\" onClick={()=>onRemove(id)}>\r\n                   <MdRemoveCircleOutline />\r\n               </div>\r\n            </TodoListItemBlock>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoListItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoListItem from './TodoListItem';\r\n\r\nconst TodoListBlock = styled.div`\r\n    min-height:480px;\r\n    // max-height:513px;\r\n    overflow-y:auto;\r\n    \r\n}\r\n`;\r\n\r\nconst TodoList = ({todos, onToggle, onRemove}) => {\r\n    return (\r\n        <TodoListBlock>\r\n            {\r\n                todos.map((todo) => <TodoListItem key={todo.id} todo={todo} onToggle={onToggle} onRemove={onRemove} />)\r\n            }\r\n        </TodoListBlock>    \r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, {useState, useRef, useCallback, useEffect} from 'react';\nimport TodoTemplate from './TodoTemplate';\nimport TodoInsert from './TodoInsert';\nimport TodoList from './TodoList';\n\nconst App = () => {\n\n  const [todos, setTodos] = useState([\n    // {id:1, text:\"일정관리1\", checked:true},\n    // {id:2, text:\"일정관리2\", checked:false},\n    // {id:3, text:\"일정관리3\", checked:true}\n  ])\n  const nextid = useRef(1)\n  const onToggle = useCallback(\n    (id) => {\n      setTodos(todos.map(todo=>todo.id===id ? {...todo, checked:!todo.checked} : todo))\n      localStorage.kim = JSON.stringify(todos.map(todo=>todo.id===id ? {...todo, checked:!todo.checked} : todo))\n    }\n  , [todos])\n  \n\n  const onInsert = useCallback(\n  (value) => {\n    const todo = {id:nextid.current, text:value, checked:false}\n    nextid.current = nextid.current + 1\n    setTodos( todos.concat(todo))\n    localStorage.kim = JSON.stringify(todos.concat(todo))\n    localStorage.nextid = JSON.stringify( nextid.current)\n  }\n  ,[todos])\n\n\n  const onRemove = useCallback(\n    (id) => {\n      setTodos(todos.filter(todo => todo.id !== id))\n      localStorage.kim = JSON.stringify(todos.filter(todo => todo.id !== id))\n    }\n    ,[todos])\n\n    useEffect(\n      () => {\n      const todo = localStorage.kim\n      const localNextId = localStorage.nextid\n      if(todo) {\n        setTodos(todos.concat(JSON.parse(todo)))\n        nextid.current = JSON.parse(localNextId)\n      }\n    }, [])\n\n  return (\n    <TodoTemplate>\n        <TodoInsert onInsert={onInsert} />\n        <TodoList todos={todos} onToggle={onToggle} onRemove={onRemove} />\n    </TodoTemplate>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}